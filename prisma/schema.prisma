generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  id                   String         @id @default(cuid())
  title                String
  slug                 String         @unique
  description          String
  content              String?
  image                String?
  category             String?
  startDate            DateTime
  endDate              DateTime?
  location             String?
  maxParticipants      Int?
  currentParticipants  Int            @default(0)
  registrationOpen     Boolean        @default(false)
  registrationDeadline DateTime?
  requiresApproval     Boolean        @default(false)
  isPublished          Boolean        @default(false)
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  registrations        Registration[]

  @@map("activities")
}

model Registration {
  id              String             @id @default(cuid())
  activityId      String
  email           String
  fullName        String
  phone           String
  yearClass       String
  faculty         String?
  major           String?
  instagramProof  String?
  instagramHandle String?
  status          RegistrationStatus @default(PENDING)
  approvedAt      DateTime?
  approvedBy      String?
  rejectedReason  String?
  motivation      String?
  specialRequest  String?
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  activity        Activity           @relation(fields: [activityId], references: [id], onDelete: Cascade)

  @@unique([activityId, email])
  @@map("registrations")
}

model Admin {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  role      AdminRole @default(MODERATOR)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("admins")
}

enum RegistrationStatus {
  PENDING
  APPROVED
  REJECTED
  ATTENDED
  ABSENT
}

enum AdminRole {
  SUPER_ADMIN
  ADMIN
  MODERATOR
}
